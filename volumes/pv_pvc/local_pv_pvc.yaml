# LOCAL PV AND PVC IF WORKER NODE GOES DOWN OR REMOVED DATA IS LOST.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html" # directoy inside the container to be mounted.
          name: mypvvolume                   # should match the vol name that is assigned.
      volumes: 
      - name: mypvvolume                     # vol name assigning.
        persistentVolumeClaim:
         claimName: mypvc1                   # pvc name.
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-deployment-np-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80  # container port no
      nodePort: 30008
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv1
spec:
  capacity:
    storage: 30Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage # local means worker node directory will be attached, if worker node fails or lost data is lost.
  local:
    path: /mylocalpv # THIS DIRECTORY MUST BE CREATED BEFORE CLAIMING IN THE WORKER NODE,INSTANCE . WON'T BE CREATED AUTOMATICALLY.
  nodeAffinity:      # here kubectl get nodes , kubectl edit node [NodeName] under LABEL section add key : value like (mypvnode:suryapv) and save.
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: mypvnode
          operator: In
          values:
          - suryapv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc1      # pvc name
spec:
  volumeName: mypv1 # pv name
  storageClassName: local-storage 
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 3Gi               
